CFLAGS = /nologo /MT /W3 /EHsc /O2 

SSLDIR = "C:\usr\local\ssl\"

INDIR   = "C:\usr\local\ssl\include"
EAYDIR  = "C:\usr\local\ssl\lib\libeay32.lib"
EAY2DIR = "C:\usr\local\ssl\lib\ssleay32.lib"

HEADER = -I$(INDIR)
LDFLAGS = kernel32.lib gdi32.lib $(EAYDIR) $(EAY2DIR) /nologo /subsystem:console

PROGS = generator verified sort crack

CUDALIB = "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v5.5\lib\Win32"

all: $(PROGS)

generator: 
        cl $(CFLAGS) $(HEADER) Generate.cpp DESCommon.cpp DESChainWalkContext.cpp        \
        /link $(LDFLAGS) /out:generator.exe

verified: 
        cl $(CFLAGS) $(HEADER) Verified.cpp DESCommon.cpp DESChainWalkContext.cpp        \
        /link $(LDFLAGS) /out:verified.exe

sort:
        cl $(CFLAGS) $(HEADER) SortPreCalculate.cpp DESCommon.cpp        \
        /link $(LDFLAGS) /out:sort.exe

crack:
        cl $(CFLAGS) $(HEADER) DESCrack.cpp DESCommon.cpp DESChainWalkContext.cpp DESCipherSet.cpp DESCrackEngine.cpp MemoryPool.cpp        \
        /link $(LDFLAGS) /out:crack.exe

gencuda:    
        nvcc.exe $(HEADER) -I. -G --compile -cudart static -Xcompiler "/wd 4819" -o DESCuda.obj DESCuda.cu
        link $(LDFLAGS) /DYNAMICBASE "cudart_static.lib" /LIBPATH:$(CUDALIB) DESCuda.obj /out:DESCuda.exe

clean:
        del *.obj DES_* *.txt *.exe